[package]
name = "luma"
version = "0.1.0"
edition = "2021"
description = "A cutting-edge machine learning framework with enhanced gradient propagation"
authors = ["Luma Team"]
license = "MIT"

[dependencies]
# Core dependencies
rayon = { version = "1.10", optional = true }             # Parallel computing
rand = "0.8"               # Random number generation
rand_distr = "0.4"         # Additional random distributions
lazy_static = "1.5"        # Lazy static initialization
syn = "2.0"                # Syntax parsing for macros

# Data handling
csv = "1.3.1"              # CSV file parsing
serde = { version = "1.0", features = ["derive"] }  # Serialization/deserialization
serde_json = { version = "1.0", optional = true }         # JSON parsing
prettytable = "0.10"       # ASCII tables for data display
chrono = "0.4"             # Date and time handling

# Multi-modal data support
image = "0.23"             # Image processing (version compatible with rustc 1.77)
hound = "3.5"              # Audio processing (WAV files)
ndarray = "0.15"           # N-dimensional arrays

# CLI and REPL
rustyline = "9.1.0"        # Interactive command line (version compatible with rustc 1.77)
clap = { version = "4.1", features = ["derive"] }  # Command line arguments

# Optional features
reqwest = { version = "0.11", features = ["json"], optional = true }  # HTTP client
tokio = { version = "1.34", features = ["full"], optional = true }    # Async runtime



[lib]
name = "luma"
path = "src/lib.rs"

[[bin]]
name = "luma"
path = "src/main.rs"

# Build dependencies
[build-dependencies]
chrono = { version = "0.4", features = ["serde"] }

# Optional dependencies for different build types
[dependencies.cbindgen]
version = "0.25"
optional = true

[dependencies.wasm-bindgen]
version = "0.2"
optional = true

[dependencies.js-sys]
version = "0.3"
optional = true

[dependencies.web-sys]
version = "0.3"
optional = true

[dependencies.pyo3]
version = "0.20"
features = ["auto-initialize"]
optional = true

# Features for different build configurations
[features]
default = ["native", "json", "parallel"]

# Native build features
native = []
parallel = ["rayon"]
openmp = []
cuda = []

# WebAssembly build features  
wasm = ["wasm-bindgen", "js-sys", "web-sys"]
web = ["wasm"]

# Google Colab build features
colab = ["pyo3", "python-bindings"]
python-bindings = ["pyo3"]

# Network features
network = ["reqwest", "tokio"]

# Common features
json = ["serde_json"]
c-bindings = ["cbindgen"]

# Development and testing features
dev-tools = []
full-tests = []

[profile.release]
lto = true           # Link-time optimization
codegen-units = 1    # Optimize for size
opt-level = 3        # Maximum optimization
debug = false        # No debug symbols
panic = "abort"      # Less code generated for panic handling

# WebAssembly optimized profile
[profile.release-wasm]
inherits = "release"
opt-level = "z"      # Optimize for size (important for WASM)
lto = "fat"          # Aggressive LTO for smaller WASM files
panic = "abort"      # Required for WASM

# Colab development profile
[profile.colab]
inherits = "dev"
debug = true
opt-level = 1        # Some optimization for better performance

# Target-specific configurations
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { version = "0.2", optional = true }
js-sys = { version = "0.3", optional = true }
web-sys = { version = "0.3", features = ["console"], optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# Native-only dependencies
cbindgen = { version = "0.25", optional = true }
