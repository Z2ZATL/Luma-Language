warning: unused imports: `DynamicImage`, `ImageBuffer`, `Rgba`
 --> src/../plugins/image_processing.rs:7:31
  |
7 | use image::{GenericImageView, ImageBuffer, DynamicImage, Rgba};
  |                               ^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `audio_to_matrix`, `image_to_matrix`, `load_multi_modal`
 --> src/../plugins/multi_modal.rs:7:52
  |
7 | ...odalData, load_multi_modal, image_to_matrix, audio_to_matrix};
  |              ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/../plugins/multi_modal.rs:9:5
  |
9 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Arc`
  --> src/../plugins/mod.rs:13:17
   |
13 | use std::sync::{Arc, RwLock};
   |                 ^^^

warning: unused variable: `resized`
  --> src/../plugins/image_processing.rs:85:9
   |
85 |     let resized = img.resize_exact(width, height, image::imageops::Filte...
   |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_resized`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `img`
   --> src/../plugins/image_processing.rs:179:9
    |
179 |     let img = match image::open(input_path) {
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_img`

warning: unused variable: `img`
   --> src/../plugins/image_processing.rs:217:9
    |
217 |     let img = match image::open(input_path) {
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_img`

warning: unused variable: `img`
   --> src/../plugins/image_processing.rs:255:9
    |
255 |     let img = match image::open(input_path) {
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_img`

warning: function `get_modality_type` is never used
   --> src/../plugins/multi_modal.rs:170:4
    |
170 | fn get_modality_type(data: &MultiModalData) -> &'static str {
    |    ^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: `luma` (lib) generated 9 warnings (run `cargo fix --lib -p luma` to apply 8 suggestions)
    Finished dev [unoptimized + debuginfo] target(s) in 0.10s
     Running `target/debug/luma --repl`
Luma REPL v1.0.0 (type 'help' for commands, 'exit' to quit)
Luma> 